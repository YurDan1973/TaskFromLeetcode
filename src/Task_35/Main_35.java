/**
 * Поиск Вставить Позицию
 * Дано отсортированное множество различных целых чисел и целевое значение,
 * Вернуть индекс, если цель найдена. Если нет, вернуть индекс, где бы он был, если бы он был вставлен по порядку.

 * Вам необходимо написать алгоритм, обладающий  O(log n)сложностью во время выполнения.

 * Пример 1:
 * Ввод: числа = [1,3,5,6], цель = 5
 *  Вывод: 2

 * Пример 2:
 * Ввод: числа = [1,3,5,6], цель = 2
 *  Вывод: 1

 * Пример 3:
 * Ввод: числа = [1,3,5,6], цель = 7
 *  Вывод: 4

 * Ограничения:
 * 1 <= nums.length <= 104
 * -104 <= nums[i] <= 104
 * nums содержит различные значения, отсортированные в порядке возрастания .
 * -104 <= target <= 104
 */
package Task_35;

import static Task_35.Solution_35.searchInsert;

public class Main_35 {
    public static void main(String[] args) {
        int[] array = {1, 3, 5, 6};
        int targ = 7;
        int ind = searchInsert(array, targ);
        System.out.println(ind);
    }
}
