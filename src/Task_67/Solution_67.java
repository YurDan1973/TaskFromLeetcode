/**
 * Объяснение:
 * Предположим, мы хотим сложить два двоичных числа — «1010» и «1101».
 * Чтобы сложить эти два числа, мы можем использовать данную функцию следующим образом:
 * Сначала мы инициализируем объект StringBuilder для хранения суммы.
 * Далее инициализируем объекты для хранения двух целочисленных переменных «carry» и «i»
 * для отслеживания значения переноса и текущей позиции в первом двоичном числе (a) соответственно.
 * Мы также инициализируем еще одну целочисленную переменную 'j', чтобы отслеживать текущую позицию во втором двоичном
 * числе (b). Вот как код инициализирует эти переменные:

 * StringBuilder sb = new StringBuilder();
 * int carry = 0;
 * int i = a.length() - 1;
 * int j = b.length() - 1;

 * Далее мы входим в цикл while, который повторяется до тех пор, пока не будут обработаны все цифры в обоих двоичных
 * числах и не останется никакого переносимого значения. В каждой итерации мы складываем цифры из обоих чисел в текущей
 * позиции и переносимое значение (если таковое имеется) и добавляем результат к объекту StringBuilder.
 * Мы также обновляем значение переноса на основе суммы цифр. Вот код для этого шага:

 * while (i >= 0 || j >= 0 || carry == 1) {
 *     if (i >= 0) {
 *         carry += a.charAt(i--) - '0';
 *     }
 *     if (j >= 0) {
 *         carry += b.charAt(j--) - '0';
 *     }
 *     sb.append(carry % 2);
 *     carry /= 2;
 * }

 * В каждой итерации текущая позиция в каждом двоичном числе перемещается на одну цифру влево
 * (если остались какие-либо цифры для обработки) путем уменьшения значений i и j.
 * Если имеется значение переноса с предыдущей итерации или сложение двух цифр дает значение переноса,
 * мы устанавливаем значение «переноса» равным 1; в противном случае мы устанавливаем его равным 0.
 * Мы также добавляем сумму цифр к объекту StringBuilder, вычисляя остаток от «переноса»,
 * деленного на 2 (который равен либо 0, либо 1).
 * Наконец, мы обновляем значение «carry», разделив его на 2 (что дает либо 0, либо 1), чтобы мы могли
 * перенести любое оставшееся значение на следующую итерацию.
 * После завершения цикла while мы реверсируем объект StringBuilder и преобразуем его
 * в строку с помощью метода toString().
 * Это дает нам сумму двух двоичных чисел в двоичном формате. Вот окончательный код:
 */

package Task_67;

class Solution_67 {
    public static String addBinary(String a, String b) {
        StringBuilder sb = new StringBuilder();
        int carry = 0;
        int i = a.length() - 1;
        int j = b.length() - 1;

        while (i >= 0 || j >= 0 || carry == 1) {
            if (i >= 0)
                carry += a.charAt(i--) - '0';
            if (j >= 0)
                carry += b.charAt(j--) - '0';
            sb.append(carry % 2);
            carry /= 2;
        }
        return sb.reverse().toString();
    }
}

