/**
 * Дан массив целых чисел nums и целое число val.
 * Удалить все вхождения val в nums in-place.
 * Порядок элементов может быть изменен. Затем вернуть количество элементов в nums которые не равны val.
 * Число элементов в nums которые не равны val равно k.

 * Чтобы быть принятым, вам необходимо сделать следующие вещи:
 * Изменить массив nums так, чтобы первые k элементов nums содержали элементы, которые не равны val.
 * Остальные элементы nums не важны, как и размер nums.
 * Возвращаться k.

 * Судья по индивидуальному заказу:
 * Судья проверит ваше решение с помощью следующего кода:
 * int[] nums = [...]; // Входной массив
 * int val = ...; // Значение для удаления
 * int[] expectedNums = [...]; // Ожидаемый ответ правильной длины.
 *                             // Сортировка выполняется без значений, равных val.
 * int k = removeElement(nums, val); // Вызывает вашу реализацию
 * k == expectedNums.length;
 * sort(nums, 0, k); // Сортируем первые k элементов nums
 * для (int i = 0; i < actualLength; i++) {
 * nums[i] == expectedNums[i];
 * }
 * Если все утверждения пройдены, то ваше решение будет принято .
 */


package Task_27;

import java.util.Arrays;

public class Main_27 {
    public static void main(String[] args) {
        int[] array = {0,1,2,2,3,0,4,2}; // Входной массив
        int value = 2; // Значение для удаления
        int m = Solution_27.removeElement(array, value); // Вызывает нашу реализацию
        System.out.println(m);
    }
}
