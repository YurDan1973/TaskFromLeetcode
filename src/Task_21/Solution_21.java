/**
 * Задача требует объединения двух отсортированных связанных списков в один отсортированный связанный список.
 * Мы можем добиться этого эффективно, используя фиктивный узел и
 * одновременно проходя по обоим спискам для построения объединенного списка.

 * Инициализация :
 * Создаём dummy узел, который будет выступать в качестве головы объединенного списка.
 * Используем указатель ( op) для отслеживания текущего узла в объединенном списке.

 * Слияние :
 * Сравниваем значения узлов в list1 и list2.
 * Добавляем меньшее значение к объединенному списку и перемещаем соответствующий указатель ( list1 или list2) вперед.

 * Оставшиеся узлы :
 * Если один из списков исчерпан, добавляем оставшиеся узлы другого списка к объединенному списку.

 * Возвращаться :
 * Объединенный список начинается с dummy.next.

 */

package Task_21;

class Solution_21 {
    public static ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode current = dummy;

        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                current.next = l1;
                l1 = l1.next;
            } else {
                current.next = l2;
                l2 = l2.next;
            }
            current = current.next;
        }

        // Если остались элементы в одном из списков
        if (l1 != null) {
            current.next = l1;
        } else {
            current.next = l2;
        }

        return dummy.next; // Возвращаем следующий элемент после "dummy"
    }
}

